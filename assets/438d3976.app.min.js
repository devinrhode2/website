define("appkit/adapters/application",["exports"],function(a){"use strict";a["default"]=DS.FixtureAdapter.extend()}),define("appkit/app",["resolver","exports"],function(a,b){"use strict";var c=a["default"],d=Ember.Application.extend({LOG_ACTIVE_GENERATION:!0,LOG_MODULE_RESOLVER:!0,LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_VIEW_LOOKUPS:!0,modulePrefix:"appkit",Resolver:c["default"]});b["default"]=d}),define("appkit/components/eui-button",["appkit/mixins/style-support","appkit/mixins/size-support","exports"],function(a,b,c){"use strict";var d,e=a["default"],f=b["default"];d=Em.Component.extend(e,f,{classNameBindings:[":eui-button","loading:eui-loading","icon:eui-icon","label::eui-no-label","isDisabled:disabled","class"],label:null,icon:null,trailingIcon:null,loading:null,disabled:null,action:null,"class":null,isDisabled:Em.computed(function(){return this.get("disabled")||this.get("loading")?!0:void 0}).property("disabled","loading"),click:function(a){return a.preventDefault(),this.sendAction("action",this.get("context"))}}),c["default"]=d}),define("appkit/components/eui-checkbox",["appkit/mixins/validation-support","appkit/mixins/style-support","appkit/mixins/size-support","exports"],function(a,b,c,d){"use strict";var e,f=a["default"],g=b["default"],h=c["default"];e=Em.Component.extend(f,g,h,{classNameBindings:[":eui-checkbox","value:eui-checked","disabled:eui-disabled","class"],value:!1,disabled:!1,click:function(){return this.get("disabled")?void 0:this.set("value",!this.get("value"))}}),d["default"]=e}),define("appkit/components/eui-dropbutton",["appkit/mixins/style-support","appkit/mixins/size-support","appkit/components/eui-popup","exports"],function(a,b,c,d){"use strict";var e,f=a["default"],g=b["default"],h=c["default"];e=Em.Component.extend(f,g,{tagName:"div",classNameBindings:["primaryAction:eui-groupbutton:eui-singlebutton"],popupIsOpen:!1,primaryAction:Em.computed(function(){return this.get("actionList").findBy("primary",!0)}).property("actionList"),actions:{toggleWindow:function(){return this.get("popupIsOpen")?void 0:h.show({targetObject:this,isOpenBinding:"targetObject.popupIsOpen",actionList:this.get("actionList"),style:"bubble"})},primaryAction:function(){return this.sendAction("primaryAction.action",this)}}}),d["default"]=e}),define("appkit/components/eui-input",["appkit/mixins/validation-support","appkit/mixins/text-support","appkit/mixins/style-support","appkit/mixins/size-support","exports"],function(a,b,c,d,e){"use strict";var f,g=a["default"],h=b["default"],i=c["default"],j=d["default"];f=Em.Component.extend(g,h,i,j,{classNameBindings:[":eui-input"],attributeBindings:["computedWidth:style"],maxlength:null,computedWidth:Em.computed(function(){var a,b;return b={tiny:"100px",small:"150px",medium:"200px",large:"250px"},a=this.get("width")||b[this.get("size")]||b.medium,"width: "+a+";"}).property("size","width")}),e["default"]=f}),define("appkit/components/eui-modal",["appkit/mixins/style-support","appkit/templates/components/eui-modal","exports"],function(a,b,c){"use strict";var d,e=a["default"],f=b["default"];d=Em.Component.extend(e,{layout:f,classNames:["eui-modal"],classNameBindings:["class","isOpen::eui-closing"],content:null,"class":null,isOpen:null,actions:{closeModal:function(){return this.hide()}},hide:function(){var a=this;return this.set("isOpen",!1),this.$().one("webkitAnimationEnd oanimationend msAnimationEnd animationend",function(){return a.destroy()})},didInsertElement:function(){return this.set("isOpen",!0)}}),d.reopenClass({show:function(a){return null==a&&(a={}),d=this.create(a),d.container=d.get("targetObject.container"),d.appendTo("body"),d}}),c["default"]=d}),define("appkit/components/eui-popup",["appkit/mixins/style-support","appkit/templates/components/eui-popup","exports"],function(a,b,c){"use strict";var d,e=a["default"],f=b["default"];d=Em.Component.extend(e,{layout:f,classNames:["eui-popup"],actions:{closePopup:function(){return this.hide()},actionThenHide:function(a){return this.get("targetObject").triggerAction({action:a}),this.hide()}},hide:function(){return this.set("isOpen",!1),$(window).unbind("scroll.emberui"),$(window).unbind("click.emberui"),this.destroy()},didInsertElement:function(){return this.set("isOpen",!0)}}),d.reopenClass({show:function(a){return null==a&&(a={}),d=this.create(a),d.container=d.get("targetObject.container"),d.appendTo(".ember-application"),Ember.run.next(this,function(){return this.position(a.targetObject,d)}),d},position:function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;return c=a.$(),j=b.$(),i=c.offset(),h=c.width()-parseFloat(j.css("paddingLeft"))-parseFloat(j.css("paddingRight")),j.css("min-width",h),f=i.top-c.scrollTop(),e=i.left-c.scrollLeft(),d=c.height(),g=c.width(),n=j.width(),k=parseFloat(j.css("paddingLeft"))+parseFloat(j.css("paddingRight")),p=$(window).scrollTop(),o=$(window).scrollLeft(),m=f+d-p,l=e+g-n-k-o,j.css("top",m),j.css("left",l),$(window).bind("scroll.emberui",function(){return b.hide()}),$(window).bind("click.emberui",function(a){return $(a.target).parents(".eui-popup").length?void 0:(a.preventDefault(),b.hide())})}}),c["default"]=d}),define("appkit/components/eui-textarea",["appkit/mixins/validation-support","appkit/mixins/text-support","appkit/mixins/style-support","appkit/mixins/size-support","exports"],function(a,b,c,d,e){"use strict";var f,g=a["default"],h=b["default"],i=c["default"],j=d["default"];f=Em.Component.extend(g,h,i,j,{classNameBindings:[":eui-textarea"],attributeBindings:["computedWidthAndHeight:style"],height:null,computedWidthAndHeight:Em.computed(function(){var a,b,c,d;return d={tiny:"100px",small:"150px",medium:"200px",large:"250px"},b={tiny:"50px",small:"75px",medium:"100px",large:"125px"},c=this.get("width")||d[this.get("size")]||d.medium,a=this.get("height")||b[this.get("size")]||b.medium,"width: "+c+"; height: "+a+";"}).property("size","width","height")}),e["default"]=f}),define("appkit/controllers/application",["exports"],function(a){"use strict";a["default"]=Ember.ObjectController.extend({currentPathChanged:function(){window.scrollTo(0,0)}.observes("currentPath")})}),define("appkit/controllers/documentation/dropbutton",["exports"],function(a){"use strict";a["default"]=Ember.ObjectController.extend({actionList:[Ember.Object.create({label:"Save",action:"save"}),Ember.Object.create({label:"Delete",action:"delete"}),Ember.Object.create({label:"Edit",action:"edit"})],actionListNoLabel:[Ember.Object.create({action:"save"}),Ember.Object.create({label:"Delete",action:"delete"}),Ember.Object.create({label:"Edit",action:"edit"})],actionListPrimary:[Ember.Object.create({label:"Save",action:"save",primary:!0}),Ember.Object.create({label:"Delete",action:"delete"}),Ember.Object.create({label:"Edit",action:"edit"})],actionListContext:[Ember.Object.create({label:"Save",action:"saveItem",primary:!0}),Ember.Object.create({label:"Delete",action:"deleteItem"}),Ember.Object.create({label:"Edit",action:"editItem"})]})}),define("appkit/controllers/documentation/errorhandling",["exports"],function(a){"use strict";a["default"]=Ember.ObjectController.extend({email:"john@example",validateEmail:function(){var a=/^[^@]+@[^@]+\.[^@\.]{2,}$/,b=this.get("email");return b.match(a)?!1:"We need a valid email address"}.property("email")})}),define("appkit/mixins/size-support",["exports"],function(a){"use strict";var b;b=Em.Mixin.create({classNameBindings:["computedSize"],size:"medium",computedSize:Em.computed(function(){return"eui-"+this.get("size")}).property("size")}),a["default"]=b}),define("appkit/mixins/style-support",["exports"],function(a){"use strict";var b;b=Em.Mixin.create({classNameBindings:["computedStyle"],style:"default",computedStyle:Em.computed(function(){return"eui-"+this.get("style")}).property("style")}),a["default"]=b}),define("appkit/mixins/text-support",["exports"],function(a){"use strict";var b;b=Em.Mixin.create({tagName:"div",classNameBindings:["computedSize","computedStyle","class"],width:null,name:null,disabled:null,tabindex:null,placeholder:null,value:null,"class":null,required:null,error:null,inputId:null,didInsertElement:function(){return this.set("inputId",this.$("input").attr("id")||this.$("textarea").attr("id"))},placeholderVisible:Em.computed(function(){var a,b;return a=this.get("placeholder"),b=this.get("value"),a&&!b?!0:void 0}).property("placeholder","value")}),a["default"]=b}),define("appkit/mixins/validation-support",["exports"],function(a){"use strict";var b;b=Em.Mixin.create({classNameBindings:["computedErrorState:eui-error"],computedErrorState:null,computedErrorMessage:null,validateField:function(a){var b,c,d;return b=this.get("error"),c=this.get("required"),d=this.get("value"),"onload"!==a||d?(Ember.isArray(b)&&(b=b[0]),b||c&&!d?(this.set("computedErrorState",!0),b&&"boolean"!=typeof b?this.set("computedErrorMessage",b):void 0):(this.set("computedErrorState",!1),this.set("computedErrorMessage",null))):void 0},focusOut:function(){return this.validateField()},onChange:function(){return this.get("computedErrorState")?Ember.run.once(this,"validateField"):void 0}.observes("value"),validateOnLoad:function(){return this.validateField("onload")}.on("init")}),a["default"]=b}),define("appkit/router",["exports"],function(a){"use strict";var b=Ember.Router.extend();b.reopen({location:"history"}),b.map(function(){this.resource("documentation",{path:"/documentation"},function(){this.route("layout",{path:"/layout"}),this.route("theming",{path:"/theming"}),this.route("errorhandling",{path:"/errorhandling"}),this.route("button",{path:"/button"}),this.route("checkbox",{path:"/checkbox"}),this.route("dropbutton",{path:"/dropbutton"}),this.route("input",{path:"/input"}),this.route("modal",{path:"/modal"}),this.route("textarea",{path:"/textarea"}),this.route("popup",{path:"/popup"})}),this.route("404",{path:"*path"})}),a["default"]=b}),define("appkit/routes/documentation/button",["exports"],function(a){"use strict";a["default"]=Ember.Route.extend({actions:{switchToLoading:function(){this.get("controller").set("isLoading",!0)},switchToDisabled:function(){this.get("controller").set("isDisabled",!0)},showAlert:function(){alert("Showing Alert")}}})}),define("appkit/routes/documentation/dropbutton",["exports"],function(a){"use strict";a["default"]=Ember.Route.extend({actions:{save:function(){alert("Saving... ")},"delete":function(){alert("Deleting... ")},edit:function(){alert("Editing... ")},saveItem:function(a){alert("Saving... "+a.item)},deleteItem:function(a){alert("Deleting... "+a.item)},editItem:function(a){alert("Editing... "+a.item)}}})}),define("appkit/routes/documentation/modal",["appkit/components/eui-modal","appkit/views/documentation/modal-example","exports"],function(a,b,c){"use strict";var d,e=a["default"],f=b["default"];d=Ember.Route.extend({actions:{showModal:function(){return e.show({targetObject:this,contentViewClass:f,content:{name:"Jaco",message:"This style is best for quick promts from the user."}})},showFullModal:function(){return e.show({targetObject:this,contentViewClass:f,content:{name:"Jaco",message:"This is a great style for more involved modals."},style:"full"})}}}),c["default"]=d}),define("appkit/utils/ajax",["exports"],function(a){"use strict";a["default"]=function(){return ic.ajax.apply(null,arguments)}}),define("appkit/views/documentation/modal-example",["appkit/templates/documentation/modal-example","exports"],function(a,b){"use strict";var c,d=a["default"];c=Ember.View.extend({template:d}),b["default"]=c}),define("appkit/templates/404",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push('<div class="container">\n  <h1>Page Not Found</h1>\n</div>\n')})}),define("appkit/templates/application",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i="",j=c.helperMissing,k=this.escapeExpression;return e.buffer.push('<div class="site-navigation">\n  <div class="container">\n    <ul>\n      <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"EmberUI","index",h):j.call(b,"link-to","EmberUI","index",h)))),e.buffer.push("</li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Documentation","documentation",h):j.call(b,"link-to","Documentation","documentation",h)))),e.buffer.push('</li>\n      <li><a href="https://medium.com/emberui-updates/">Blog</a></li>\n      <li><a href="https://github.com/emberui/emberui">Fork it!</a></li>\n    </ul>\n  </div>\n</div>\n\n'),f=c._triageMustache.call(b,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n"),i})}),define("appkit/templates/components/eui-button",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d="";return b.buffer.push("\n        <b "),b.buffer.push(k(c["bind-attr"].call(a,{hash:{"class":"icon"},hashTypes:{"class":"STRING"},hashContexts:{"class":a},contexts:[],types:[],data:b}))),b.buffer.push("></b>\n      "),d}function g(a,b){var d="";return b.buffer.push("\n        <b "),b.buffer.push(k(c["bind-attr"].call(a,{hash:{"class":"trailingIcon"},hashTypes:{"class":"STRING"},hashContexts:{"class":a},contexts:[],types:[],data:b}))),b.buffer.push("></b>\n      "),d}function h(a,b){b.buffer.push('\n      <ul class="eui-loading-animation">\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n    ')}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var i,j="",k=this.escapeExpression,l=this;return e.buffer.push("<button "),e.buffer.push(k(c["bind-attr"].call(b,{hash:{disabled:"isDisabled"},hashTypes:{disabled:"STRING"},hashContexts:{disabled:b},contexts:[],types:[],data:e}))),e.buffer.push('></button>\n\n<div class="eui-button-form">\n  <div class="eui-wrapper">\n    <i>\n      '),i=c["if"].call(b,"icon",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(1,f,e),contexts:[b],types:["ID"],data:e}),(i||0===i)&&e.buffer.push(i),e.buffer.push("\n\n      "),i=c._triageMustache.call(b,"label",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(i||0===i)&&e.buffer.push(i),e.buffer.push("\n\n      "),i=c["if"].call(b,"trailingIcon",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(3,g,e),contexts:[b],types:["ID"],data:e}),(i||0===i)&&e.buffer.push(i),e.buffer.push("\n    </i>\n\n    "),i=c["if"].call(b,"loading",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(5,h,e),contexts:[b],types:["ID"],data:e}),(i||0===i)&&e.buffer.push(i),e.buffer.push("\n  </div>\n</div>\n"),j})}),define("appkit/templates/components/eui-checkbox",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e="";return b.buffer.push('\n  <div class="eui-error-message">\n    <div class="eui-error-wrapper">\n      <p>\n        '),d=c._triageMustache.call(a,"computedErrorMessage",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n      </p>\n    </div>\n  </div>\n"),e}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var g,h="",i=this.escapeExpression,j=this;return e.buffer.push('<input type="checkbox" '),e.buffer.push(i(c["bind-attr"].call(b,{hash:{value:"value",disabled:"disabled"},hashTypes:{value:"ID",disabled:"ID"},hashContexts:{value:b,disabled:b},contexts:[],types:[],data:e}))),e.buffer.push(" />\n\n<div "),e.buffer.push(i(c["bind-attr"].call(b,{hash:{"class":":eui-checkbox-form disabled:eui-disabled:eui-enabled"},hashTypes:{"class":"STRING"},hashContexts:{"class":b},contexts:[],types:[],data:e}))),e.buffer.push('>\n  <div class="eui-wrapper">\n    <i class="eui-icon"></i>\n  </div>\n</div>\n\n'),g=c._triageMustache.call(b,"label",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(g||0===g)&&e.buffer.push(g),e.buffer.push("\n\n"),g=c["if"].call(b,"computedErrorMessage",{hash:{},hashTypes:{},hashContexts:{},inverse:j.noop,fn:j.program(1,f,e),contexts:[b],types:["ID"],data:e}),(g||0===g)&&e.buffer.push(g),e.buffer.push("\n"),h})}),define("appkit/templates/components/eui-dropbutton",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e,f="";return b.buffer.push("\n  "),b.buffer.push(k((d=c["eui-button"]||a&&a["eui-button"],e={hash:{label:"primaryAction.label",style:"view.style",size:"view.size",icon:"view.icon",loading:"view.loading",disabled:"view.disabled","class":"eui-primaryaction",action:"primaryAction"},hashTypes:{label:"ID",style:"ID",size:"ID",icon:"ID",loading:"ID",disabled:"ID","class":"STRING",action:"STRING"},hashContexts:{label:a,style:a,size:a,icon:a,loading:a,disabled:a,"class":a,action:a},contexts:[],types:[],data:b},d?d.call(a,e):j.call(a,"eui-button",e)))),b.buffer.push("\n\n  "),b.buffer.push(k((d=c["eui-button"]||a&&a["eui-button"],e={hash:{style:"view.style",size:"view.size",icon:"fa fa-caret-down",loading:!1,disabled:"view.disabled",classBinding:":eui-trigger popupIsOpen:eui-active",action:"toggleWindow"},hashTypes:{style:"ID",size:"ID",icon:"STRING",loading:"BOOLEAN",disabled:"ID",classBinding:"STRING",action:"STRING"},hashContexts:{style:a,size:a,icon:a,loading:a,disabled:a,classBinding:a,action:a},contexts:[],types:[],data:b},d?d.call(a,e):j.call(a,"eui-button",e)))),b.buffer.push("\n\n"),f}function g(a,b){var d,e,f="";return b.buffer.push("\n  "),b.buffer.push(k((d=c["eui-button"]||a&&a["eui-button"],e={hash:{label:"view.label",style:"view.style",size:"view.size",icon:"view.icon",trailingIcon:"fa fa-caret-down",loading:"view.loading",disabled:"view.disabled",classBinding:"popupIsOpen:eui-active",action:"toggleWindow"},hashTypes:{label:"ID",style:"ID",size:"ID",icon:"ID",trailingIcon:"STRING",loading:"ID",disabled:"ID",classBinding:"STRING",action:"STRING"},hashContexts:{label:a,style:a,size:a,icon:a,trailingIcon:a,loading:a,disabled:a,classBinding:a,action:a},contexts:[],types:[],data:b},d?d.call(a,e):j.call(a,"eui-button",e)))),b.buffer.push("\n\n"),f}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var h,i="",j=c.helperMissing,k=this.escapeExpression,l=this;return h=c["if"].call(b,"primaryAction",{hash:{},hashTypes:{},hashContexts:{},inverse:l.program(3,g,e),fn:l.program(1,f,e),contexts:[b],types:["ID"],data:e}),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n"),i})}),define("appkit/templates/components/eui-input",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e="";return b.buffer.push("\n    <label "),b.buffer.push(l(c["bind-attr"].call(a,{hash:{"for":"inputId"},hashTypes:{"for":"ID"},hashContexts:{"for":a},contexts:[],types:[],data:b}))),b.buffer.push(">"),d=c._triageMustache.call(a,"placeholder",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("</label>\n  "),e}function g(a,b){var d,e="";return b.buffer.push('\n  <div class="eui-error-message">\n    <div class="eui-error-wrapper">\n      <p>\n        '),d=c._triageMustache.call(a,"computedErrorMessage",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n      </p>\n    </div>\n  </div>\n"),e}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var h,i,j,k="",l=this.escapeExpression,m=this,n=c.helperMissing;return e.buffer.push('<div class="eui-wrapper">\n  '),h=c["if"].call(b,"placeholderVisible",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,f,e),contexts:[b],types:["ID"],data:e}),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n  "),e.buffer.push(l((i=c.input||b&&b.input,j={hash:{type:"type",value:"value",name:"name",disabled:"disabled",maxlength:"maxlength",tabindex:"tabindex"},hashTypes:{type:"ID",value:"ID",name:"ID",disabled:"ID",maxlength:"ID",tabindex:"ID"},hashContexts:{type:b,value:b,name:b,disabled:b,maxlength:b,tabindex:b},contexts:[],types:[],data:e},i?i.call(b,j):n.call(b,"input",j)))),e.buffer.push("\n</div>\n\n"),h=c["if"].call(b,"computedErrorMessage",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(3,g,e),contexts:[b],types:["ID"],data:e}),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n"),k})}),define("appkit/templates/components/eui-modal",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="",g=this.escapeExpression;return e.buffer.push('<div class="eui-verticalspacer">\n  <div class="eui-modalobject">\n    <div class="eui-modalwrapper">\n      '),e.buffer.push(g(c.view.call(b,"contentViewClass",{hash:{contentBinding:"content"},hashTypes:{contentBinding:"STRING"},hashContexts:{contentBinding:b},contexts:[b],types:["ID"],data:e}))),e.buffer.push('\n    </div>\n  </div>\n</div>\n\n<div class="eui-overlay"></div>\n'),f})}),define("appkit/templates/components/eui-popup",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e="";return b.buffer.push("\n      "),d=c.unless.call(a,"primary",{hash:{},hashTypes:{},hashContexts:{},inverse:k.noop,fn:k.program(2,g,b),contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),e}function g(a,b){var d,e="";return b.buffer.push('\n      <li class="option" '),b.buffer.push(j(c.action.call(a,"actionThenHide","action",{hash:{},hashTypes:{},hashContexts:{},contexts:[a,a],types:["STRING","ID"],data:b}))),b.buffer.push(">"),d=c._triageMustache.call(a,"label",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("</li>\n      "),e}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var h,i="",j=this.escapeExpression,k=this;return e.buffer.push('<div class="eui-popupwrapper">\n  <ul class="eui-options">\n    '),h=c.each.call(b,"actionList",{hash:{},hashTypes:{},hashContexts:{},inverse:k.noop,fn:k.program(1,f,e),contexts:[b],types:["ID"],data:e}),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n  </ul>\n</div>\n\n"),i})}),define("appkit/templates/components/eui-textarea",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e="";return b.buffer.push("\n    <label "),b.buffer.push(l(c["bind-attr"].call(a,{hash:{"for":"inputId"},hashTypes:{"for":"ID"},hashContexts:{"for":a},contexts:[],types:[],data:b}))),b.buffer.push(">"),d=c._triageMustache.call(a,"placeholder",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("</label>\n  "),e}function g(a,b){var d,e="";return b.buffer.push('\n  <div class="eui-error-message">\n    <div class="eui-error-wrapper">\n      <p>\n        '),d=c._triageMustache.call(a,"computedErrorMessage",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n      </p>\n    </div>\n  </div>\n"),e}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var h,i,j,k="",l=this.escapeExpression,m=this,n=c.helperMissing;return e.buffer.push('<div class="eui-wrapper">\n  '),h=c["if"].call(b,"placeholderVisible",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,f,e),contexts:[b],types:["ID"],data:e}),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n  "),e.buffer.push(l((i=c.textarea||b&&b.textarea,j={hash:{value:"value",type:"type",name:"name",disabled:"disabled",maxlength:"maxlength",tabindex:"tabindex"},hashTypes:{value:"ID",type:"ID",name:"ID",disabled:"ID",maxlength:"ID",tabindex:"ID"},hashContexts:{value:b,type:b,name:b,disabled:b,maxlength:b,tabindex:b},contexts:[],types:[],data:e},i?i.call(b,j):n.call(b,"textarea",j)))),e.buffer.push("\n</div>\n\n"),h=c["if"].call(b,"computedErrorMessage",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(3,g,e),contexts:[b],types:["ID"],data:e}),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n"),k})}),define("appkit/templates/documentation",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i="",j=c.helperMissing,k=this.escapeExpression;return e.buffer.push('<div class="container">\n  <div class="docs-navigation">\n    <ul>\n      <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Introduction","documentation.index",h):j.call(b,"link-to","Introduction","documentation.index",h)))),e.buffer.push('</li>\n    </ul>\n\n    <h6 class="fa fa-lightbulb-o">Concepts</h6>\n    <ul>\n      <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Layout","documentation.layout",h):j.call(b,"link-to","Layout","documentation.layout",h)))),e.buffer.push("</li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Theming","documentation.theming",h):j.call(b,"link-to","Theming","documentation.theming",h)))),e.buffer.push(" </li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Error Handling","documentation.errorhandling",h):j.call(b,"link-to","Error Handling","documentation.errorhandling",h)))),e.buffer.push('</li>\n    </ul>\n\n    <h6 class="fa fa-puzzle-piece">Components</h6>\n    <ul>\n      <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Button","documentation.button",h):j.call(b,"link-to","Button","documentation.button",h)))),e.buffer.push("</li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Checkbox","documentation.checkbox",h):j.call(b,"link-to","Checkbox","documentation.checkbox",h)))),e.buffer.push("</li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Dropbutton","documentation.dropbutton",h):j.call(b,"link-to","Dropbutton","documentation.dropbutton",h)))),e.buffer.push("</li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Input","documentation.input",h):j.call(b,"link-to","Input","documentation.input",h)))),e.buffer.push("</li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Modal","documentation.modal",h):j.call(b,"link-to","Modal","documentation.modal",h)))),e.buffer.push("</li>\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Textarea","documentation.textarea",h):j.call(b,"link-to","Textarea","documentation.textarea",h)))),e.buffer.push('</li>\n    </ul>\n\n    <h6 class="fa fa-lock">Internal</h6>\n    <ul>\n      <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Popup","documentation.popup",h):j.call(b,"link-to","Popup","documentation.popup",h)))),e.buffer.push('</li>\n    </ul>\n  </div>\n\n  <div class="docs-content">\n    '),f=c._triageMustache.call(b,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n  </div>\n</div>\n"),i})}),define("appkit/templates/documentation/button",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-button}}</h1>\n\n<div class="intro">\n  A reimplementation of the browser button tag that adds a loading state and support for icons.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-class">class</a></li>\n  <li><a href="#section-label">label</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-icon">icon</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n  <li><a href="#section-loading">loading</a></li>\n\n  <li class="header">Actions</li>\n  <li><a href="#section-action">action</a></li>\n</ul>\n\n\n<h4 id="section-class">class <span>string</span></h4>\n<p>\n  Assigns a custom CSS class to the button.\n</p>\n\n\n<h4 id="section-label">label <span>string</span></h4>\n<p>\n  The text displayed on the button.\n</p>\n\n<pre>{{eui-button label=\'Save Changes\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes"},hashTypes:{label:"STRING"},hashContexts:{label:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  The size of the button.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>tiny</li>\n  <li>small</li>\n  <li>medium (default)</li>\n  <li>large</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-button label='Save Changes' size='tiny'}}\n{{eui-button label='Save Changes' size='small'}}\n{{eui-button label='Save Changes' size='medium'}}\n{{eui-button label='Save Changes' size='large'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"tiny"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"small"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"medium"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"large"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  The aesthetic style of the button.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n  <li>primary</li>\n</ul>\n<p>\n  Additional styles can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-button label='Save Changes' style='default'}}\n{{eui-button label='Save Changes' style='primary'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",style:"default"},hashTypes:{label:"STRING",style:"STRING"},hashContexts:{label:b,style:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",style:"primary"},hashTypes:{label:"STRING",style:"STRING"},hashContexts:{label:b,style:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-icon\">icon <span>string</span></h4>\n<p>\n  Displays an icon in front of the label. If no label is set, the button will show up square with the icon centered.\n</p>\n<p>\n  Pass in a class that will get assgined to a <em>&lt;b&gt;</em> tag inside the button label. You can customize the icon with the css <em>:before</em> selector or set a background image on the tag if icon fonts are not to be used.\n</p>\n\n<pre>{{eui-button label='Settings' icon='fa fa-cog'}}\n{{eui-button icon='fa fa-cog'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Settings",icon:"fa fa-cog"},hashTypes:{label:"STRING",icon:"STRING"},hashContexts:{label:b,icon:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{icon:"fa fa-cog"},hashTypes:{icon:"STRING"},hashContexts:{icon:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n<p>\n  The example uses <a href=\"http://fontawesome.io/\">FontAwesome</a> for its icons.\n</p>\n\n\n<h4 id=\"section-disabled\">disabled <span>boolean</span></h4>\n<p>\n  Disables the button and prevents the action from firing if clicked.\n</p>\n\n<pre>{{eui-button label='Save Changes' disabled=true}}\n{{eui-button label='Click to Disable' disabled=isDisabled action='switchToDisabled'}}</pre>\n\n<pre>actions: {\n  switchToDisabled: function(controller) {\n    this.get(\"controller\").set('isDisabled', true);\n  }\n}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",disabled:!0},hashTypes:{label:"STRING",disabled:"BOOLEAN"},hashContexts:{label:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Click to Disable",disabled:"isDisabled",action:"switchToDisabled"},hashTypes:{label:"STRING",disabled:"ID",action:"STRING"},hashContexts:{label:b,disabled:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-loading\">loading <span>boolean</span></h4>\n<p>\n  If <em>loading</em> is set to true the <em>disabled</em> state is automatically activated as well and the loading state is entered. Upong entering the loading state the the button label is faded out and the animation is faded in.\n</p>\n<p>\n  The button maintains its size during the loading phase. If the button is too small to show all three dots of the loading animation the amount of dots will be reduced until it fits.\n</p>\n\n<pre>{{eui-button label='Save Changes' loading=true}}\n{{eui-button label='Click to Load' loading=isLoading action='switchToLoading'}}</pre>\n\n<pre>actions: {\n  switchToLoading: function(controller) {\n    this.get(\"controller\").set('isLoading', true);\n  }\n}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",loading:!0},hashTypes:{label:"STRING",loading:"BOOLEAN"},hashContexts:{label:b,loading:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Click to Load",loading:"isLoading",action:"switchToLoading"},hashTypes:{label:"STRING",loading:"ID",action:"STRING"},hashContexts:{label:b,loading:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-action">action <span>string</span></h4>\n<p>\n  The action you want to execute when the user clicks on the button.\n</p>\n\n<pre>{{eui-button label=\'Show Alert\' action=\'showAlert\'}}</pre>\n\n<pre>actions: {\n  showAlert: function() {\n    alert("Showing Alert");\n  }\n}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Show Alert",action:"showAlert"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n<p>\n  The context of the button gets passed through with the click and allows you to pass through information that the action can act on.\n</p>\n\n<pre>{{eui-button label='Show Alert' action='deleteItem' itemToDelete=item}}</pre>\n\n<pre>actions: {\n  deleteItem: function(context) {\n    this.controller.get('items').removeObject(context.itemToDelete);\n  }\n}</pre>\n"),h
})}),define("appkit/templates/documentation/checkbox",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-checkbox}}</h1>\n\n<div class="intro">\n  A reimplementation of the browser checkbox input to support custom styling and error handling.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-class">class</a></li>\n  <li><a href="#section-label">label</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-style">style</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n\n  <li class="header">Error Handling</li>\n  <li><a href="#section-error">error</a></li>\n</ul>\n\n\n<h4 id="section-class">class <span>string</span></h4>\n<p>\n  Assigns a custom CSS class to the checkbox.\n</p>\n\n\n<h4 id="section-label">label <span>string</span></h4>\n<p>\n  The text displayed next to the checkbox.\n</p>\n\n<pre>{{eui-checkbox label=\'Remember me\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-checkbox"]||b&&b["eui-checkbox"],g={hash:{label:"Remember me"},hashTypes:{label:"STRING"},hashContexts:{label:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-checkbox",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  Controls the size of the checkbox.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>medium (default)</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  The aesthetic style of the button.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n</ul>\n\n\n<h4 id="section-disabled">disabled <span>boolean</span></h4>\n<p>\n  Disables the checkbox.\n</p>\n\n<pre>{{eui-checkbox label=\'Enabled\' disabled=true}}\n{{eui-checkbox label=\'Checked\' value=true disabled=true}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-checkbox"]||b&&b["eui-checkbox"],g={hash:{label:"Unchecked",disabled:!0},hashTypes:{label:"STRING",disabled:"BOOLEAN"},hashContexts:{label:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-checkbox",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-checkbox"]||b&&b["eui-checkbox"],g={hash:{label:"Checked",value:!0,disabled:!0},hashTypes:{label:"STRING",value:"BOOLEAN",disabled:"BOOLEAN"},hashContexts:{label:b,value:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-checkbox",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-error">error <span>boolean | string</span></h4>\n<p>\n  Responsible for validation and error handling. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Error Handling","documentation.errorhandling",g):i.call(b,"link-to","Error Handling","documentation.errorhandling",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-required">required <span>boolean</span></h4>\n<p>\n  If set to true the checkbox must be checked.\n</p>\n'),h})}),define("appkit/templates/documentation/dropbutton",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push("<h1>{{eui-dropbutton}}</h1>\n\n<div class=\"intro\">\n  Combines the button and popup components into a dropbutton or splitbutton.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class=\"parameterindex\">\n  <li class=\"header\">Aesthetic</li>\n  <li><a href=\"#section-label\">label</a></li>\n  <li><a href=\"#section-size\">size</a></li>\n  <li><a href=\"#section-style\">style</a></li>\n  <li><a href=\"#section-icon\">icon</a></li>\n\n  <li class=\"header\">States</li>\n  <li><a href=\"#section-disabled\">disabled</a></li>\n  <li><a href=\"#section-loading\">loading</a></li>\n\n  <li class=\"header\">Actions</li>\n  <li><a href=\"#section-action\">action</a></li>\n</ul>\n\n<h4 id=\"section-label\">label <span>string</span></h4>\n<p>\n  The text displayed on the button. If there are is a primary event associated with the button the label for the primary event will be used instead.\n</p>\n\n<pre>{{eui-dropbutton label='Actions' actionList=actionList}}\n{{eui-dropbutton label='Actions' actionList=actionList}}</pre>\n\n<pre>actionList: [\n  Ember.Object.create({ label: 'Save', action: 'save' }),\n  Ember.Object.create({ label: 'Delete', action: 'delete' }),\n  Ember.Object.create({ label: 'Edit', action: 'edit' })\n],\n\nactionListPrimary: [\n  Ember.Object.create({ label: 'Save', action: 'save', primary: true }),\n  Ember.Object.create({ label: 'Delete', action: 'delete' }),\n  Ember.Object.create({ label: 'Edit', action: 'edit' })\n]</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",actionList:"actionList"},hashTypes:{label:"STRING",actionList:"ID"},hashContexts:{label:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",actionList:"actionListPrimary"},hashTypes:{label:"STRING",actionList:"ID"},hashContexts:{label:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  Controls the size of the button. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",size:"small",actionList:"actionList"},hashTypes:{label:"STRING",size:"STRING",actionList:"ID"},hashContexts:{label:b,size:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",size:"small",actionList:"actionListPrimary"},hashTypes:{label:"STRING",size:"STRING",actionList:"ID"},hashContexts:{label:b,size:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  Controls the aesthetic style of the button. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"default",actionList:"actionList"},hashTypes:{label:"STRING",style:"STRING",actionList:"ID"},hashContexts:{label:b,style:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"default",actionList:"actionListPrimary"},hashTypes:{label:"STRING",style:"STRING",actionList:"ID"},hashContexts:{label:b,style:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"primary",actionList:"actionList"},hashTypes:{label:"STRING",style:"STRING",actionList:"ID"},hashContexts:{label:b,style:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"primary",actionList:"actionListPrimary"},hashTypes:{label:"STRING",style:"STRING",actionList:"ID"},hashContexts:{label:b,style:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-icon">icon <span>string</span></h4>\n<p>\n  Displays an icon in front of the label. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<p>\n  There is one thing to consider when making use of an icon. Because the dropbutton already makes use of an icon to indicate the popup will open when clicked, it is not recommended that the button have both a label and an icon at the same time.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",icon:"fa fa-cog",actionList:"actionList"},hashTypes:{label:"STRING",icon:"STRING",actionList:"ID"},hashContexts:{label:b,icon:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n<p>\n  Framing the label in such a way makes it look awkward. It is better to rely purely on an icon or a label.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{icon:"fa fa-cog",actionList:"actionListNoLabel"},hashTypes:{icon:"STRING",actionList:"ID"},hashContexts:{icon:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n<p>\n  Because the splitbutton uses a second button as a trigger for the popup it is ok to make use of an icon with the label.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{icon:"fa fa-save",actionList:"actionListPrimary"},hashTypes:{icon:"STRING",actionList:"ID"},hashContexts:{icon:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n<h4 id="section-disabled">disabled <span>boolean</span></h4>\n<p>\n  Disables the button. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",disabled:!0,actionList:"actionList"},hashTypes:{label:"STRING",disabled:"BOOLEAN",actionList:"ID"},hashContexts:{label:b,disabled:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",disabled:!0,actionList:"actionListPrimary"},hashTypes:{label:"STRING",disabled:"BOOLEAN",actionList:"ID"},hashContexts:{label:b,disabled:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-loading">loading <span>boolean</span></h4>\n<p>\n  See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<p>\n  The dropbutton\'s loading state is identical to that of a regular button. If a splitbutton is put into a loading state only the left button is put into a loading state and the right one remains intact.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",loading:!0,actionList:"actionList"},hashTypes:{label:"STRING",loading:"BOOLEAN",actionList:"ID"},hashContexts:{label:b,loading:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",loading:!0,actionList:"actionListPrimary"},hashTypes:{label:"STRING",loading:"BOOLEAN",actionList:"ID"},hashContexts:{label:b,loading:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-action\">action <span>array</span></h4>\n<p>\n  The dropbutton takes an array of actions.\n</p>\n\n<pre>actionList: [\n    Ember.Object.create({ label: 'Save', action: 'save' }),\n    Ember.Object.create({ label: 'Delete', action: delete' }),\n    Ember.Object.create({ label: 'Edit', action: 'edit' })\n]</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",actionList:"actionList"},hashTypes:{label:"STRING",actionList:"ID"},hashContexts:{label:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n\n<p>\n  Each action should have a label and action associated with it. You may optionally set one of the actions as the primary action and omit its label if you wish to use only an icon. If multiple actions are set as primary the first one will be taken and the rest treated as secondary actions.\n</p>\n\n<pre>actionListPrimary: [\n    Ember.Object.create({ label: 'Save', action: 'save', primary: true }),\n    Ember.Object.create({ label: 'Delete', action: 'delete' }),\n    Ember.Object.create({ label: 'Edit', action: 'edit' })\n]</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",actionList:"actionListPrimary"},hashTypes:{label:"STRING",actionList:"ID"},hashContexts:{label:b,actionList:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n\n<p>\n  If there is a primary action the button will act as a splitbutton, if no primary action is assigned it will behave as a dropbutton.\n</p>\n\n<p>\n  The context of the button gets passed through with the click and allows you to pass through information that the action can act on.\n</p>\n\n<pre>{{eui-dropbutton actionList=actionListPrimary item='item 1'}}</pre>\n\n<pre>actionListContext: [\n  Ember.Object.create({ label: 'Save', action: 'saveItem', primary: true }),\n  Ember.Object.create({ label: 'Delete', action: 'deleteItem' }),\n  Ember.Object.create({ label: 'Edit', action: 'editItem' })\n]</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{actionList:"actionListContext",item:"item 1"},hashTypes:{actionList:"ID",item:"STRING"},hashContexts:{actionList:b,item:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n"),h})}),define("appkit/templates/documentation/errorhandling",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push("<h1>Error Handling</h1>\n\n<div class=\"intro\">\n  Greatly speed up form validation and general error handling while also improving the usability of your applications.\n</div>\n\n<h2>Logic</h2>\n\n<p>\n  When the page loads inputs are in a normal state. For the form element to get highlighted in red or an error message to show up the element needs to enter an errror state. Entering and leaving the error state happens based on a set of conditions.\n</p>\n\n<ul>\n  <li>\n    <strong>Page load</strong>\n    <ul>\n      <li>Element has a value: calculate and update error state</li>\n      <li>Element has no value: don't do anything</li>\n    </ul>\n  </li>\n  <li>\n    <strong>Element value change</strong>\n    <ul>\n      <li>Element currently not in an error state: don't do anything</li>\n      <li>Elment currently in an error state: calculate and update error state on change</li>\n    </ul>\n  </li>\n  <li>\n    <strong>Element looses focus</strong>\n    <ul>\n      <li>Calculate and update error state</li>\n    </ul>\n  </li>\n</ul>\n\n<p>\n  We do not calculate or enter an error state for inputs that are blank on page load because the user has had no chance to interact with them yet.\n</p>\n<p>\n  This also applies when the user is entering data into an elment not currently in an error state. We don't have to trigger an error as soon as the user starts typing, we need to give them a chance to finish first. Thus the first error check happens when the elment looses focus.\n</p>\n\n\n<h2>error</h2>\n\n<p>\n  To enter the error state simply return true for the <em>error</em> property. Remember, if the element has no value then <em>error</em> will not be evaluated on page load.\n</p>\n\n<pre>{{eui-input value='' error=true placeholder=\"Will error on focus out\"}}\n{{eui-input value='john@example' error=true}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"",error:!0,placeholder:"Will error on focus out"},hashTypes:{value:"STRING",error:"BOOLEAN",placeholder:"STRING"},hashContexts:{value:b,error:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"john@example",error:!0},hashTypes:{value:"STRING",error:"BOOLEAN"},hashContexts:{value:b,error:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n<p>\n  You can also return a string instead of a boolean value in order to show an error message.\n</p>\n\n<pre>{{eui-input value=\'dog\' error="Please enter a valid location"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"dog",error:"Please enter a valid location"},hashTypes:{value:"STRING",error:"STRING"},hashContexts:{value:b,error:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n</div>\n\n<p>\n  Both of these examples used a hardcoded value so the error state cannot change. If we instead make use of Ember's data bindings we can create an input that checks its error state dynamically.\n</p>\n\n<pre>{{eui-input value=email error=validateEmail}}</pre>\n\n<pre>email: 'john@example',\n\nvalidateEmail: function() {\n  var emailpat = /^[^@]+@[^@]+\\.[^@\\.]{2,}$/;\n  var email = this.get('email');\n\n  if (email.match(emailpat)) {\n    return false;\n  } else {\n    return 'We need a valid email address';\n  }\n}.property('email')</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"email",error:"validateEmail"},hashTypes:{value:"ID",error:"ID"},hashContexts:{value:b,error:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n<br />\n\n<p>\n  You can use a validation library such as <a href="https://github.com/dockyard/ember-validations">Ember Validations</a> in conjunction with <em>error</em> for succinct error handeling.\n</p>\n\n\n'),h})}),define("appkit/templates/documentation/index",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push('<h1>Introduction</h1>\n\n<p>\n  - uses appkit<br />\n  - es6 modules\n</p>\n\n<p>\n  Useful for complex HTML5 applications, not just rapid prototyping.\n</p>\n\n<h2>Design Files</h2>\n\n<p>\n  You can use these PSDs to make mocking up layouts with EmberUI super fast. There is one PSD for each form element and it contains the element in all its possible states and variations. EmberUI is under heavy development so not all the possibilities shown in the PSDs may currently be implemented.\n</p>\n\n<ul class="filelist">\n  <li>\n    <a href="/assets/psds/button.psd"><img src="/assets/images/download-button.png" width="230" /></a>\n  </li>\n  <li>\n    <a href="/assets/psds/button.psd"><img src="/assets/images/download-checkbox.png" width="230" /></a>\n  </li>\n  <li>\n    <a href="/assets/psds/button.psd"><img src="/assets/images/download-input.png" width="230" /></a>\n  </li>\n  <li>\n    <a href="/assets/psds/button.psd"><img src="/assets/images/download-select.png" width="230" /></a>\n  </li>\n</ul>\n')})}),define("appkit/templates/documentation/input",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-input}}</h1>\n\n<div class="intro">\n  A reimplementation of the standard browser text input with added support for validation and error handling.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Attributes</li>\n  <li><a href="#section-type">type</a></li>\n  <li><a href="#section-placeholder">placeholder</a></li>\n  <li><a href="#section-value">value</a></li>\n\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-width">width</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n\n  <li class="header">Error Handling</li>\n  <li><a href="#section-error">error</a></li>\n  <li><a href="#section-required">required</a></li>\n</ul>\n\n\n<h4 id="section-type">type <span>string</span></h4>\n<p>\n  Type of input desired. Any value entered will be assigned to the type attribute on the input element.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>text (default)</li>\n  <li>password</li>\n</ul>\n\n\n<h4 id="section-placeholder">placeholder <span>string</span></h4>\n<p>\n  Placeholder value for the input. Does not make use of the placeholder attribute, but instead reimplements the behaviour in html.\n</p>\n\n<pre>{{eui-input placeholder=\'Email address\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Email address"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-value">value <span>string</span></h4>\n<p>\n  The value of the input.\n</p>\n\n<pre>{{eui-input value=\'john@example.com\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"john@example.com"},hashTypes:{value:"STRING"},hashContexts:{value:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  Aesthetic style of the input.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n</ul>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  The overall size of the input. Width is set via the <a href="#section-width">width</a> parameter.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>tiny</li>\n  <li>small</li>\n  <li>medium (default)</li>\n  <li>large</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-input size='tiny'}}\n{{eui-input size='small'}}\n{{eui-input size='medium'}}\n{{eui-input size='large'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"tiny"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"small"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"medium"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"large"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-width\">width <span>string</span></h4>\n<p>\n  Width of the input. You must pass in a CSS size value with the unit. Input uses the CSS box-sizing to ensure precentage based sizes are actual sizes.\n</p>\n\n<pre>{{eui-input width='150px' placeholder='150px'}}\n{{eui-input width='15em' placeholder='15em'}}\n{{eui-input width='30%' placeholder='30%'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{width:"150px",placeholder:"150px"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{width:"15em",placeholder:"15em"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{width:"30%",placeholder:"30%"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-disabled\">disabled <span>boolean</span></h4>\n<p>\n  Disables the input.\n</p>\n\n<pre>{{eui-input placeholder='Email Address' disabled=true}}\n{{eui-input value='Email Address' disabled=true}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Email Address",disabled:!0},hashTypes:{placeholder:"STRING",disabled:"BOOLEAN"},hashContexts:{placeholder:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"Email Address",disabled:!0},hashTypes:{value:"STRING",disabled:"BOOLEAN"},hashContexts:{value:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-error">error <span>boolean | string</span></h4>\n<p>\n  Responsible for validation and error handling. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Error Handling","documentation.errorhandling",g):i.call(b,"link-to","Error Handling","documentation.errorhandling",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-required">required <span>boolean</span></h4>\n<p>\n  If set to true the input requires a value or it will throw an error when it looses focus.\n</p>\n'),h})}),define("appkit/templates/documentation/layout",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>Layout</h1>\n\n<div class="intro">\n  All components are available in several sizes to allow for easy layout and a clear hierarchy.\n</div>\n\n<p>\n  EmberUI does not try to replicate what css frameworks such as Bootstrap tries to do. Components are structured such that they are easy to use together, but if you are expecting a grid framework for layout you will not find it here.\n</p>\n\n<p>\n  EmberUI will work with css frameworks if you so choose, but if you are writing an ambitious application then you probably should spend some time writing custom layout code and not rely on generic css.\n</p>\n\n<h2>Working with components</h2>\n\n<p>\n  All components are designed to work together when the same size is specified. Should there be no line break between them they will flow onto the same line and align with each other.\n</p>\n\n<pre>{{eui-input placeholder="Name"}}\n{{eui-input placeholder="Email Address"}}\n{{eui-button label="Signup"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Name"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Email Address"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Signup"},hashTypes:{label:"STRING"},hashContexts:{label:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n<p>\n  Components are set to display as inline-block items via css. Should you put two components next to each other of different sizes they will vertically align with each other.\n</p>\n\n<pre>{{eui-input placeholder="Todo" size="large"}}\n{{eui-button label="Add" size="small"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Todo",size:"large"},hashTypes:{placeholder:"STRING",size:"STRING"},hashContexts:{placeholder:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Add",size:"small"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n<p>\n  Obviously you may not want to mix sizes as demonstrated, but it is important to understand how components interact with each other.\n</p>\n"),h})}),define("appkit/templates/documentation/modal-example",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i="",j=c.helperMissing,k=this.escapeExpression;return e.buffer.push('<div style="padding: 50px 100px; text-align: center;">\n  <h1>Hello '),f=c._triageMustache.call(b,"content.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("!</h1>\n\n  <br />\n\n  "),f=c._triageMustache.call(b,"content.message",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n\n  <br /><br /><br />\n\n  "),e.buffer.push(k((g=c["eui-button"]||b&&b["eui-button"],h={hash:{label:"Close Modal",action:"closeModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},g?g.call(b,h):j.call(b,"eui-button",h)))),e.buffer.push("\n</div>\n"),i})}),define("appkit/templates/documentation/modal",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};
var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push("<h1>modal</h1>\n\n<div class=\"intro\">\n  A programatic modal dialog.\n</div>\n\n<h2>Using the Modal</h2>\n\n<p>\n  The modal can be created programatically using using the <em>show</em> method on the component.\n</p>\n\n<pre>{{eui-button label='Open Modal' action='showModal'}}</pre>\n\n<pre>import modalContentTemplate from 'appkit/templates/documentation/modal-example'\n\nview = Ember.View.extend({\n  template: modalContentTemplate\n})\n</pre>\n\n<pre>import modalComponent from 'appkit/components/eui-modal'\nimport modalContentView from 'appkit/views/documentation/modal-example'\n\nactions: {\n  showModal: function() {\n    modalComponent.show({\n      targetObject: this\n      contentViewClass: modalContentView,\n      content: { name: \"Jaco\" }\n    });\n  }\n}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Open Modal",action:"showModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n<p>\n  To close the modal you call the action <em>closeModal</em> from within the view.\n</p>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Required</li>\n  <li><a href="#section-targetobject">targetObject</a></li>\n\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-class">class</a></li>\n  <li><a href="#section-style">style</a></li>\n</ul>\n\n\n<h4 id="section-targetobject">targetObject <span>object</span></h4>\n<p>\n  Required for Ember to behave correctly. Set it equal to <em>this</em>\n</p>\n\n\n<h4 id="section-label">class <span>string</span></h4>\n<p>\n  Assigns a custom CSS class to the modal.\n</p>\n\n\n<h4 id="section-isopen">style <span>string</span></h4>\n<p>\n  The aesthetic style of the modal.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (defaut)</li>\n  <li>full</li>\n</ul>\n<p>\n  Additional styles can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push('\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Default",action:"showModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Full",action:"showFullModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n\n<h2>Actions</h2>\n\n<ul class="parameterindex">\n  <li><a href="#section-closemodal">closeModal</a></li>\n</ul>\n\n<h4 id="section-closemodal">closeModal <span></span></h4>\n<p>\n  Closes the modal and removes it from the DOM.\n</p>\n'),h})}),define("appkit/templates/documentation/popup",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>popup</h1>\n\n<div class="intro">\n  A fixed positioned popup window that presents a list of choices to the user.\n</div>\n\n<p>\n  This component is created programatically and can be done by calling the <em>show()</em> method on the component.\n</p>\n\n<pre>import popupComponent from \'appkit/components/eui-popup\'\n\npopupComponent.show({\n  targetObject: this\n  actionList: this.get(\'actionList\'),\n  style: \'bubble\'\n});</pre>\n\n<p>\n  The popup is created on the body element and positioned using fixed positioning. It is sized and positioned according to the window frame, not the page content which allows for a much more native feel. Because of this positioning you can safely use this popup inside elements with <em>overflow: auto;</em> without it getting cut off or causing the element to scroll. The popup automatically closes when the window is scrolled.\n</p>\n\n<p>\n  This component implementation is still very raw.\n</p>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Required</li>\n  <li><a href="#section-targetobject">targetObject</a></li>\n\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-style">style</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-isopen">isOpen</a></li>\n\n  <li class="header">Actions</li>\n  <li><a href="#section-actionlist">actionList</a></li>\n</ul>\n\n\n<h4 id="section-targetobject">targetObject <span>object</span></h4>\n<p>\n  Required for Ember to behave correctly. Set it equal to <em>this</em>\n</p>\n\n\n<h4 id="section-isopen">style <span>string</span></h4>\n<p>\n  The aesthetic style of the popup.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>bubble</li>\n</ul>\n<p>\n  Additional styles can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n\n<h4 id=\"section-isopen\">isOpen <span>boolean</span></h4>\n<p>\n  Passes back knowledge of whether the popup is open. This allows you to create, for example, a button that is styled differently while the popup is open. It also allows you to prevent the popup from being opened while it is already open.\n</p>\n\n<pre>import popupComponent from 'appkit/components/eui-popup'\n\nif (!this.get('popupIsOpen')) {\n  popupComponent.show({\n    _parentView: this.get('parentView'),\n    parent: this,\n    isOpenBinding: 'parent.popupIsOpen',\n    actionList: this.get('actionList'),\n    style: 'bubble'\n  });\n}</pre>\n\n\n<h4 id=\"section-isopen\">actionList <span>array</span></h4>\n<p>\n  See the "),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"dropbutton","documentation.dropbutton",g):i.call(b,"link-to","dropbutton","documentation.dropbutton",g)))),e.buffer.push(" actions section.\n</p>\n"),h})}),define("appkit/templates/documentation/textarea",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-textarea}}</h1>\n\n<div class="intro">\n  A reimplementation of the standard browser textarea with added support for validation and error handling.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Attributes</li>\n  <li><a href="#section-placeholder">placeholder</a></li>\n  <li><a href="#section-value">value</a></li>\n\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-width">width</a></li>\n  <li><a href="#section-height">height</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n\n  <li class="header">Error Handling</li>\n  <li><a href="#section-error">error</a></li>\n  <li><a href="#section-required">required</a></li>\n</ul>\n\n\n<h4 id="section-placeholder">placeholder <span>string</span></h4>\n<p>\n  Placeholder value for the textarea. Does not make use of the placeholder attribute, but instead reimplements the behaviour in html.\n</p>\n\n<pre>{{eui-textarea placeholder=\'Message\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{placeholder:"Message"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-value">value <span>string</span></h4>\n<p>\n  The value of the textarea.\n</p>\n\n<pre>{{eui-textarea value=\'Hey John\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{value:"Hey John"},hashTypes:{value:"STRING"},hashContexts:{value:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  Aesthetic style of the textarea.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n</ul>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  Controls the overall size of the textarea. Width is set via the width parameter.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>tiny</li>\n  <li>small</li>\n  <li>medium (default)</li>\n  <li>large</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-textarea size='tiny'}}\n{{eui-textarea size='small'}}\n{{eui-textarea size='medium'}}\n{{eui-textarea size='large'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"tiny"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"small"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"medium"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"large"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-width\">width <span>string</span></h4>\n<p>\n  Width of the textarea. You must pass in a CSS size value with the unit. Textarea uses the CSS box-sizing to ensure precentage based sizes are actual sizes.\n</p>\n\n<pre>{{eui-textarea width='150px' placeholder='150px'}}\n{{eui-textarea width='15em' placeholder='15em'}}\n{{eui-textarea width='30%' placeholder='30%'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{width:"150px",placeholder:"150px"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{width:"15em",placeholder:"15em"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{width:"30%",placeholder:"30%"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-height\">height <span>string</span></h4>\n<p>\n  Height of the textarea. You must pass in a CSS size value with the unit. Textarea uses the CSS box-sizing to ensure precentage based sizes are actual sizes.\n</p>\n\n<pre>{{eui-textarea height='50px' placeholder='50px'}}\n{{eui-textarea height='5em' placeholder='5em'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{height:"50px",placeholder:"50px"},hashTypes:{height:"STRING",placeholder:"STRING"},hashContexts:{height:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{height:"5em",placeholder:"5em"},hashTypes:{height:"STRING",placeholder:"STRING"},hashContexts:{height:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-disabled\">disabled <span>boolean</span></h4>\n<p>\n  Disables the textarea.\n</p>\n\n<pre>{{eui-textarea placeholder='Message' disabled=true}}\n{{eui-textarea value='Hey John' disabled=true}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{placeholder:"Message",disabled:!0},hashTypes:{placeholder:"STRING",disabled:"BOOLEAN"},hashContexts:{placeholder:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{value:"Hey John",disabled:!0},hashTypes:{value:"STRING",disabled:"BOOLEAN"},hashContexts:{value:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-error">error <span>boolean | string</span></h4>\n<p>\n  Responsible for validation and error handling. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Error Handling","documentation.errorhandling",g):i.call(b,"link-to","Error Handling","documentation.errorhandling",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-required">required <span>boolean</span></h4>\n<p>\n  If set to true the textarea requires a value or it will throw an error when it looses focus.\n</p>\n'),h})}),define("appkit/templates/documentation/theming",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="";return e.buffer.push('<h1>Theming</h1>\n\n<div class="intro">\n  Extend upon the existing aesthetic style or replace it completely with a custom theme.\n</div>\n\n<h2>Extending the default theme</h2>\n\n<p>\n  Every component has a style attribute. This style value is taken, <em>eui-</em> is prepended to allow for concise scoping by the css, and it is then added as a class to the main container element of the component.\n</p>\n<p>\n  For example, the button component has two supported style attributes, default and primary. If you specified the primary style then the final markup for the button, minus all the ember markup, would look something like this:\n</p>\n\n<pre>&lt;button class="eui-button eui-primary eui-medium">\n  &lt;div class="eui-wrapper">\n    &lt;i>\n      Save Changes\n    &lt;/i>\n  &lt;/div>\n&lt;/button></pre>\n\n<p>However, you can specify any value you desire and that value would be set as the class prefixed with eui-. If you do not supply a style paramater then the default class will automatically be added.\n</p>\n<p>\n  The same logic applies for the size paramater as well. By default tiny, small, medium (default value), and large is supported. However, say you wanted to add a gigantic size simply specify it:\n</p>\n\n<pre>{{eui-button label="Save Changes size="gigantic"}}</pre>\n\n<pre>&lt;button class="eui-button eui-default eui-gigantic">\n  &lt;div class="eui-wrapper">\n    &lt;i>\n      Save Changes\n    &lt;/i>\n  &lt;/div>\n&lt;/button></pre>\n\n<p>\n  Then add the relevant css classes to support the new size to your theme file. Your css would look something like this:\n</p>\n\n<pre> .eui-button.eui-gigantic {\n  border-radius: 7px;\n  padding: 1px;\n\n  .eui-wrapper {\n    height: 70px;\n    line-height: 70px;\n    padding: 0 30px;\n    min-width: 5px;\n\n    &.eui-no-label .eui-wrapper {\n      padding: 0 20px;\n    }\n  }\n}</pre>\n\n<p>\n  You should scope your sizes to the component type to avoid style interference. Creating additional styles can be quite involved if you want to suppose the full range of features, but will pay off in the long run.\n</p>\n\n<h2>Creating a new theme</h2>\n\n<p>\n  To make creating a completely different theme easy the css for EmberUI has been split into a base and theme file set. The base set is restricted to only the necessary css to support the feature set and provide an easy starting point for styling a new theme.\n</p>\n<p>\n  The default theme set contains some very complex styles to support its visual aesthetic. If you plan to create a lot of custom styles it may be easier to delete the default theme and create your own.\n</p>\n'),f})}),define("appkit/templates/error",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g="";return e.buffer.push("<h1>Sorry, Something went wrong</h1>\n"),f=c._triageMustache.call(b,"message",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n<pre>\n"),f=c._triageMustache.call(b,"stack",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n</pre>\n"),g})}),define("appkit/templates/index",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push('<div class="banner">\n  <div class="container">\n    <h1>EmberUI</h1>\n    <h2>A framework for crafting <strong>ambitious</strong> interfaces.</h2>\n  </div>\n</div>\n')})}),define("appkit/templates/loading",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push("<h1>Loading...</h1>\n")})});